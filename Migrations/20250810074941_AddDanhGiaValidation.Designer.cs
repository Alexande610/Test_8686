// <auto-generated />
using System;
using LittleFishBeauty.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LittleFishBeauty.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250810074941_AddDanhGiaValidation")]
    partial class AddDanhGiaValidation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LittleFishBeauty.Models.AnhSanPham", b =>
                {
                    b.Property<int>("ID_Anh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Anh"));

                    b.Property<string>("DuongDan")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ID_SanPham")
                        .HasColumnType("int");

                    b.Property<string>("LoaiAnh")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID_Anh");

                    b.HasIndex("ID_SanPham");

                    b.ToTable("AnhSanPham", t =>
                        {
                            t.HasCheckConstraint("CK_AnhSanPham_LoaiAnh", "LoaiAnh IN ('chinh', 'phu', '360')");
                        });
                });

            modelBuilder.Entity("LittleFishBeauty.Models.BienTheSanPham", b =>
                {
                    b.Property<int>("ID_BienThe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_BienThe"));

                    b.Property<decimal?>("GiaBan")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ID_SanPham")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SoLuongTonKho")
                        .HasColumnType("int");

                    b.HasKey("ID_BienThe");

                    b.HasIndex("ID_SanPham");

                    b.HasIndex("SKU")
                        .IsUnique()
                        .HasFilter("[SKU] IS NOT NULL");

                    b.ToTable("BienTheSanPham");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.ChiTietBienThe", b =>
                {
                    b.Property<int>("ID_BienThe")
                        .HasColumnType("int");

                    b.Property<int>("ID_GiaTri")
                        .HasColumnType("int");

                    b.HasKey("ID_BienThe", "ID_GiaTri");

                    b.HasIndex("ID_GiaTri");

                    b.ToTable("ChiTietBienThe");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.ChiTietDonHang", b =>
                {
                    b.Property<int>("ID_ChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_ChiTiet"));

                    b.Property<decimal>("GiaLucDat")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ID_BienThe")
                        .HasColumnType("int");

                    b.Property<int>("ID_DonHang")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("ID_ChiTiet");

                    b.HasIndex("ID_BienThe");

                    b.HasIndex("ID_DonHang");

                    b.ToTable("ChiTietDonHang");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.ChiTietGioHang", b =>
                {
                    b.Property<int>("ID_ChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_ChiTiet"));

                    b.Property<int>("ID_BienThe")
                        .HasColumnType("int");

                    b.Property<int>("ID_GioHang")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("ID_ChiTiet");

                    b.HasIndex("ID_BienThe");

                    b.HasIndex("ID_GioHang");

                    b.ToTable("ChiTietGioHang");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.DanhGia", b =>
                {
                    b.Property<int>("ID_DanhGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_DanhGia"));

                    b.Property<string>("AnhDanhGia")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BinhLuan")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("ID_SanPham")
                        .HasColumnType("int");

                    b.Property<int>("ID_TaiKhoan")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDanhGia")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoSao")
                        .HasColumnType("int");

                    b.HasKey("ID_DanhGia");

                    b.HasIndex("ID_SanPham");

                    b.HasIndex("ID_TaiKhoan");

                    b.ToTable("DanhGia", t =>
                        {
                            t.HasCheckConstraint("CK_DanhGia_SoSao", "SoSao BETWEEN 1 AND 5");
                        });
                });

            modelBuilder.Entity("LittleFishBeauty.Models.DanhMuc", b =>
                {
                    b.Property<int>("ID_DanhMuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_DanhMuc"));

                    b.Property<string>("AnhDaiDien")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DuongDanSEO")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ID_DanhMucCha")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenDanhMuc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ThuTuHienThi")
                        .HasColumnType("int");

                    b.HasKey("ID_DanhMuc");

                    b.HasIndex("ID_DanhMucCha");

                    b.ToTable("DanhMuc");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.DiaChi", b =>
                {
                    b.Property<int>("ID_DiaChi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_DiaChi"));

                    b.Property<string>("DiaChiChiTiet")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HoTenNguoiNhan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ID_TaiKhoan")
                        .HasColumnType("int");

                    b.Property<bool>("MacDinh")
                        .HasColumnType("bit");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID_DiaChi");

                    b.HasIndex("ID_TaiKhoan");

                    b.ToTable("DiaChi");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.DonHang", b =>
                {
                    b.Property<int>("ID_DonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_DonHang"));

                    b.Property<int?>("DiaChiID_DiaChi")
                        .HasColumnType("int");

                    b.Property<int>("ID_DiaChi")
                        .HasColumnType("int");

                    b.Property<int>("ID_TaiKhoan")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhuongThucThanhToan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TongTien")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID_DonHang");

                    b.HasIndex("DiaChiID_DiaChi");

                    b.HasIndex("ID_DiaChi");

                    b.HasIndex("ID_TaiKhoan");

                    b.ToTable("DonHang");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.GiaTriThuocTinh", b =>
                {
                    b.Property<int>("ID_GiaTri")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_GiaTri"));

                    b.Property<string>("GiaTri")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ID_ThuocTinh")
                        .HasColumnType("int");

                    b.HasKey("ID_GiaTri");

                    b.HasIndex("ID_ThuocTinh");

                    b.ToTable("GiaTriThuocTinh");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.GioHang", b =>
                {
                    b.Property<int>("ID_GioHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_GioHang"));

                    b.Property<int>("ID_TaiKhoan")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_GioHang");

                    b.HasIndex("ID_TaiKhoan");

                    b.ToTable("GioHang");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.SanPham", b =>
                {
                    b.Property<int>("ID_SanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_SanPham"));

                    b.Property<decimal>("GiaBan")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ID_DanhMuc")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenSanPham")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("ID_SanPham");

                    b.HasIndex("ID_DanhMuc");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.TaiKhoan", b =>
                {
                    b.Property<int>("ID_TaiKhoan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_TaiKhoan"));

                    b.Property<string>("AnhDaiDien")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HoTen")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<string>("VaiTro")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID_TaiKhoan");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("TaiKhoan", t =>
                        {
                            t.HasCheckConstraint("CK_TaiKhoan_VaiTro", "VaiTro IN ('admin', 'khach')");
                        });
                });

            modelBuilder.Entity("LittleFishBeauty.Models.ThuocTinh", b =>
                {
                    b.Property<int>("ID_ThuocTinh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_ThuocTinh"));

                    b.Property<string>("TenThuocTinh")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID_ThuocTinh");

                    b.ToTable("ThuocTinh");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.AnhSanPham", b =>
                {
                    b.HasOne("LittleFishBeauty.Models.SanPham", "SanPham")
                        .WithMany("AnhSanPhams")
                        .HasForeignKey("ID_SanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.BienTheSanPham", b =>
                {
                    b.HasOne("LittleFishBeauty.Models.SanPham", "SanPham")
                        .WithMany("BienTheSanPhams")
                        .HasForeignKey("ID_SanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.ChiTietBienThe", b =>
                {
                    b.HasOne("LittleFishBeauty.Models.BienTheSanPham", "BienTheSanPham")
                        .WithMany("ChiTietBienThes")
                        .HasForeignKey("ID_BienThe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LittleFishBeauty.Models.GiaTriThuocTinh", "GiaTriThuocTinh")
                        .WithMany("ChiTietBienThes")
                        .HasForeignKey("ID_GiaTri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BienTheSanPham");

                    b.Navigation("GiaTriThuocTinh");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.ChiTietDonHang", b =>
                {
                    b.HasOne("LittleFishBeauty.Models.BienTheSanPham", "BienTheSanPham")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("ID_BienThe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LittleFishBeauty.Models.DonHang", "DonHang")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("ID_DonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BienTheSanPham");

                    b.Navigation("DonHang");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.ChiTietGioHang", b =>
                {
                    b.HasOne("LittleFishBeauty.Models.BienTheSanPham", "BienTheSanPham")
                        .WithMany("ChiTietGioHangs")
                        .HasForeignKey("ID_BienThe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LittleFishBeauty.Models.GioHang", "GioHang")
                        .WithMany("ChiTietGioHangs")
                        .HasForeignKey("ID_GioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BienTheSanPham");

                    b.Navigation("GioHang");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.DanhGia", b =>
                {
                    b.HasOne("LittleFishBeauty.Models.SanPham", "SanPham")
                        .WithMany("DanhGias")
                        .HasForeignKey("ID_SanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LittleFishBeauty.Models.TaiKhoan", "TaiKhoan")
                        .WithMany("DanhGias")
                        .HasForeignKey("ID_TaiKhoan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.DanhMuc", b =>
                {
                    b.HasOne("LittleFishBeauty.Models.DanhMuc", "DanhMucCha")
                        .WithMany("DanhMucCons")
                        .HasForeignKey("ID_DanhMucCha")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DanhMucCha");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.DiaChi", b =>
                {
                    b.HasOne("LittleFishBeauty.Models.TaiKhoan", "TaiKhoan")
                        .WithMany("DiaChis")
                        .HasForeignKey("ID_TaiKhoan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.DonHang", b =>
                {
                    b.HasOne("LittleFishBeauty.Models.DiaChi", null)
                        .WithMany("DonHangs")
                        .HasForeignKey("DiaChiID_DiaChi");

                    b.HasOne("LittleFishBeauty.Models.DiaChi", "DiaChi")
                        .WithMany()
                        .HasForeignKey("ID_DiaChi")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LittleFishBeauty.Models.TaiKhoan", "TaiKhoan")
                        .WithMany("DonHangs")
                        .HasForeignKey("ID_TaiKhoan")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DiaChi");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.GiaTriThuocTinh", b =>
                {
                    b.HasOne("LittleFishBeauty.Models.ThuocTinh", "ThuocTinh")
                        .WithMany("GiaTriThuocTinhs")
                        .HasForeignKey("ID_ThuocTinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ThuocTinh");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.GioHang", b =>
                {
                    b.HasOne("LittleFishBeauty.Models.TaiKhoan", "TaiKhoan")
                        .WithMany("GioHangs")
                        .HasForeignKey("ID_TaiKhoan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.SanPham", b =>
                {
                    b.HasOne("LittleFishBeauty.Models.DanhMuc", "DanhMuc")
                        .WithMany("SanPhams")
                        .HasForeignKey("ID_DanhMuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhMuc");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.BienTheSanPham", b =>
                {
                    b.Navigation("ChiTietBienThes");

                    b.Navigation("ChiTietDonHangs");

                    b.Navigation("ChiTietGioHangs");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.DanhMuc", b =>
                {
                    b.Navigation("DanhMucCons");

                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.DiaChi", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.DonHang", b =>
                {
                    b.Navigation("ChiTietDonHangs");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.GiaTriThuocTinh", b =>
                {
                    b.Navigation("ChiTietBienThes");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.GioHang", b =>
                {
                    b.Navigation("ChiTietGioHangs");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.SanPham", b =>
                {
                    b.Navigation("AnhSanPhams");

                    b.Navigation("BienTheSanPhams");

                    b.Navigation("DanhGias");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.TaiKhoan", b =>
                {
                    b.Navigation("DanhGias");

                    b.Navigation("DiaChis");

                    b.Navigation("DonHangs");

                    b.Navigation("GioHangs");
                });

            modelBuilder.Entity("LittleFishBeauty.Models.ThuocTinh", b =>
                {
                    b.Navigation("GiaTriThuocTinhs");
                });
#pragma warning restore 612, 618
        }
    }
}
